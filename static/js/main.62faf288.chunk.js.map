{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/App/App.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/LoaderContainer/LoaderContainer.module.css","components/Searchbar/Searchbar.module.css","api/imagesApi.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/LoaderContainer/LoaderContainer.jsx","components/App/App.jsx","index.js"],"names":["module","exports","getImages","axios","create","baseURL","params","key","image_type","orientation","fetchImage","a","q","page","per_page","data","hits","console","error","Searchbar","state","searchImage","handleImageSearch","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","images","onClick","map","image","id","webformatURL","largeImageURL","tags","ImageGalleryItem","ImageGalleryItemImage","src","alt","Button","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","Overlay","children","LoaderContainer","loaderContainer","color","height","width","timeout","App","useState","arrImages","setArrImages","setSearchImage","currentPage","setCurrentPage","showModal","setShowModal","largeImageUrl","setLargeImageUrl","imageAlt","setImageAlt","isLoading","setIsLoading","useEffect","fetchImages","imagesApi","length","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","nodeName","dataset","img","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62faf288.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3q6Ih\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3kEjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2CKW4\",\"Overlay\":\"Modal_Overlay___s50N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__25jqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2JGp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3XfZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"LoaderContainer_loaderContainer__1CkCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3k2u8\",\"SearchForm\":\"Searchbar_SearchForm__3Szus\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2ROI6\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__QW7di\",\"SearchFormInput\":\"Searchbar_SearchFormInput__iNrQ7\"};","import axios from 'axios';\r\n\r\nconst getImages = axios.create({\r\n  baseURL: 'https://pixabay.com/api/',\r\n  params: {\r\n    key: '23914400-19c57926caa45a402450638cc',\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n  },\r\n});\r\n\r\nexport default async function fetchImage(q = '', page = 1, per_page = 12) {\r\n  try {\r\n    const { data } = await getImages('', { params: { q, page, per_page } });\r\n\r\n    return data.hits;\r\n  } catch (error) {\r\n    console.error(`Image ${q} not found`);\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    searchImage: '',\r\n  };\r\n\r\n  handleImageSearch = e => {\r\n    this.setState({ searchImage: e.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { searchImage } = this.state;\r\n\r\n    if (searchImage.trim() === '') {\r\n      toast.error('Enter your search term');\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(searchImage);\r\n    this.setState({ searchImage: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel} />\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            value={this.state.searchImage}\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleImageSearch}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from 'components/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nexport default function ImageGallery({ images, onClick }) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(image => ImageGalleryItem(image, onClick))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem(\r\n  { id, webformatURL, largeImageURL, tags },\r\n  onClick,\r\n) {\r\n  return (\r\n    <li className={s.ImageGalleryItem} key={id}>\r\n      <img\r\n        className={s.ImageGalleryItemImage}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-img={largeImageURL}\r\n        onClick={onClick}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import s from './Button.module.css';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button className={s.Button} type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n","import { Component } from 'react';\r\nimport s from './Modal.module.css';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Loader from 'react-loader-spinner';\r\n\r\nimport s from './LoaderContainer.module.css';\r\n\r\nexport default function LoaderContainer() {\r\n  return (\r\n    <div className={s.loaderContainer}>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"red\"\r\n        height={100}\r\n        width={100}\r\n        timeout={1000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useState, useEffect } from 'react';\r\nimport imagesApi from 'api/imagesApi';\r\nimport s from './App.module.css';\r\n\r\nimport Searchbar from 'components/Searchbar';\r\nimport ImageGallery from 'components/ImageGallery';\r\nimport Button from 'components/Button';\r\nimport Modal from 'components/Modal';\r\nimport LoaderContainer from 'components/LoaderContainer';\r\n\r\nexport default function App() {\r\n  const [arrImages, setArrImages] = useState([]);\r\n  const [searchImage, setSearchImage] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageUrl, setLargeImageUrl] = useState('');\r\n  const [imageAlt, setImageAlt] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // const componentDidUpdate = (prevProps, prevState) => {\r\n  //   if (prevState.searchImage !== searchImage) this.fetchImages();\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (!searchImage) {\r\n      fetchImages();\r\n    }\r\n  }, [fetchImages(), searchImage]);\r\n\r\n  const fetchImages = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const images = await imagesApi(searchImage, currentPage);\r\n      if (images.length < 1) {\r\n        toast.error(`Image ${searchImage} not found`);\r\n        return;\r\n      }\r\n      setArrImages([...arrImages, ...images]);\r\n      setCurrentPage(currentPage + 1);\r\n      setIsLoading(!isLoading);\r\n      // this.setState(({ arrImages, currentPage, isLoading }) => ({\r\n      //   arrImages: [...arrImages, ...images],\r\n      //   currentPage: currentPage + 1,\r\n      //   isLoading: !isLoading,\r\n      // }));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = searchImage => {\r\n    setSearchImage(null);\r\n    setArrImages([]);\r\n  };\r\n\r\n  const toogleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const onClickOpenModal = e => {\r\n    if (e.target.nodeName !== 'IMG') {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n\r\n    setLargeImageUrl(e.target.dataset.img);\r\n    setShowModal(true);\r\n    setImageAlt(e.target.alt);\r\n    // this.setState({\r\n    //   largeImageURL: e.target.dataset.img,\r\n    //   showModal: true,\r\n    //   imageAlt: e.target.alt,\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <div className={s.App}>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n\r\n      <ImageGallery images={arrImages} onClick={onClickOpenModal} />\r\n      {isLoading && <LoaderContainer />}\r\n      {arrImages.length > 0 && <Button onClick={fetchImages} />}\r\n\r\n      {showModal && (\r\n        <Modal onClose={toogleModal}>\r\n          <img src={largeImageUrl} alt={imageAlt} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default class App extends Component {\r\n//   state = {\r\n//     arrImages: [],\r\n//     searchImage: null,\r\n//     currentPage: 1,\r\n//     showModal: false,\r\n//     largeImageURL: '',\r\n//     imageAlt: '',\r\n//     isLoading: false,\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const { searchImage } = this.state;\r\n\r\n//     if (prevState.searchImage !== searchImage) this.fetchImages();\r\n//   }\r\n\r\n//   fetchImages = async () => {\r\n//     const { searchImage, currentPage } = this.state;\r\n//     this.setState({ isLoading: true });\r\n\r\n//     try {\r\n//       const images = await imagesApi(searchImage, currentPage);\r\n//       if (images.length < 1) {\r\n//         toast.error(`Image ${searchImage} not found`);\r\n//         return;\r\n//       }\r\n//       this.setState(({ arrImages, currentPage, isLoading }) => ({\r\n//         arrImages: [...arrImages, ...images],\r\n//         currentPage: currentPage + 1,\r\n//         isLoading: !isLoading,\r\n//       }));\r\n//     } catch (e) {\r\n//       console.error(e);\r\n//     }\r\n//   };\r\n\r\n//   handleFormSubmit = searchImage => {\r\n//     this.setState({\r\n//       arrImages: [],\r\n//       searchImage,\r\n//     });\r\n//   };\r\n\r\n//   toogleModal = () => {\r\n//     this.setState(({ showModal }) => ({\r\n//       showModal: !showModal,\r\n//     }));\r\n//   };\r\n\r\n//   onClickOpenModal = e => {\r\n//     if (e.target.nodeName !== 'IMG') {\r\n//       return;\r\n//     }\r\n//     e.preventDefault();\r\n\r\n//     this.setState({\r\n//       largeImageURL: e.target.dataset.img,\r\n//       showModal: true,\r\n//       imageAlt: e.target.alt,\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const { arrImages, showModal, largeImageURL, tags, isLoading } = this.state;\r\n//     return (\r\n//       <div className={s.App}>\r\n//         <Searchbar onSubmit={this.handleFormSubmit} />\r\n//         <ToastContainer\r\n//           position=\"top-right\"\r\n//           autoClose={5000}\r\n//           hideProgressBar={false}\r\n//           newestOnTop={false}\r\n//           closeOnClick\r\n//           rtl={false}\r\n//           pauseOnFocusLoss\r\n//           draggable\r\n//           pauseOnHover\r\n//         />\r\n\r\n//         <ImageGallery images={arrImages} onClick={this.onClickOpenModal} />\r\n//         {isLoading && <LoaderContainer />}\r\n//         {arrImages.length > 0 && <Button onClick={this.fetchImages} />}\r\n\r\n//         {showModal && (\r\n//           <Modal onClose={this.toogleModal}>\r\n//             <img src={largeImageURL} alt={tags} />\r\n//           </Modal>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport 'modern-normalize';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}