{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/App/App.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/LoaderContainer/LoaderContainer.module.css","components/Searchbar/Searchbar.module.css","api/imagesApi.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/LoaderContainer/LoaderContainer.jsx","components/App/App.jsx","index.js"],"names":["module","exports","getImages","axios","create","baseURL","params","key","image_type","orientation","a","q","page","per_page","data","hits","console","error","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","SearchForm","e","preventDefault","trim","toast","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","value","placeholder","onChange","currentTarget","toLowerCase","ImageGallery","images","onClick","map","image","id","webformatURL","largeImageURL","tags","ImageGalleryItem","ImageGalleryItemImage","src","alt","Button","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","target","window","addEventListener","this","removeEventListener","Overlay","children","Component","LoaderContainer","loaderContainer","color","height","width","timeout","App","arrImages","setArrImages","searchImage","setSearchImage","currentPage","setCurrentPage","showModal","setShowModal","largeImageUrl","setLargeImageUrl","imageAlt","setImageAlt","isLoading","setIsLoading","useEffect","imagesApi","then","length","state","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","nodeName","dataset","img","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d91b9478.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3q6Ih\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3kEjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2CKW4\",\"Overlay\":\"Modal_Overlay___s50N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__25jqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2JGp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3XfZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"LoaderContainer_loaderContainer__1CkCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3k2u8\",\"SearchForm\":\"Searchbar_SearchForm__3Szus\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2ROI6\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__QW7di\",\"SearchFormInput\":\"Searchbar_SearchFormInput__iNrQ7\"};","import axios from 'axios';\r\n\r\nconst getImages = axios.create({\r\n  baseURL: 'https://pixabay.com/api/',\r\n  params: {\r\n    key: '23914400-19c57926caa45a402450638cc',\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n  },\r\n});\r\n\r\nexport default async function fetchImage(q = '', page = 1, per_page = 12) {\r\n  try {\r\n    const { data } = await getImages('', { params: { q, page, per_page } });\r\n    return data.hits;\r\n  } catch (error) {\r\n    console.error(`Image ${q} not found`);\r\n  }\r\n}\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleImageSearch = e => {\r\n    setSearchQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (searchQuery.trim() === '') {\r\n      toast.error('Enter your search term');\r\n      return;\r\n    }\r\n\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel} />\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          value={searchQuery}\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleImageSearch}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from 'components/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nexport default function ImageGallery({ images, onClick }) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(image => ImageGalleryItem(image, onClick))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem(\r\n  { id, webformatURL, largeImageURL, tags },\r\n  onClick,\r\n) {\r\n  return (\r\n    <li className={s.ImageGalleryItem} key={id}>\r\n      <img\r\n        className={s.ImageGalleryItemImage}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-img={largeImageURL}\r\n        onClick={onClick}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import s from './Button.module.css';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button className={s.Button} type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n","import { Component } from 'react';\r\nimport s from './Modal.module.css';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Loader from 'react-loader-spinner';\r\n\r\nimport s from './LoaderContainer.module.css';\r\n\r\nexport default function LoaderContainer() {\r\n  return (\r\n    <div className={s.loaderContainer}>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"red\"\r\n        height={100}\r\n        width={100}\r\n        timeout={1000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useState, useEffect } from 'react';\r\nimport imagesApi from 'api/imagesApi';\r\nimport s from './App.module.css';\r\n\r\nimport Searchbar from 'components/Searchbar';\r\nimport ImageGallery from 'components/ImageGallery';\r\nimport Button from 'components/Button';\r\nimport Modal from 'components/Modal';\r\nimport LoaderContainer from 'components/LoaderContainer';\r\n\r\nexport default function App() {\r\n  const [arrImages, setArrImages] = useState([]);\r\n  const [searchImage, setSearchImage] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageUrl, setLargeImageUrl] = useState('');\r\n  const [imageAlt, setImageAlt] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (searchImage) {\r\n      setIsLoading(true);\r\n      imagesApi(searchImage, currentPage).then(images => {\r\n        if (images.length < 1) {\r\n          toast.error(`Image ${searchImage} not found`);\r\n          return;\r\n        }\r\n        setArrImages(state => [...state, ...images]);\r\n        setIsLoading(state => !state);\r\n      });\r\n    }\r\n  }, [currentPage, searchImage]);\r\n\r\n  // useEffect(() => {\r\n  //   return async function fetchImages() {\r\n  //     setIsLoading(true);\r\n  //     try {\r\n  //       const images = await imagesApi(searchImage, currentPage);\r\n  //       if (images.length < 1) {\r\n  //         toast.error(`Image ${searchImage} not found`);\r\n  //         return;\r\n  //       }\r\n  //       setArrImages(state => [...state, ...images]);\r\n  //       setIsLoading(false);\r\n  //     } catch (e) {\r\n  //       console.error(e);\r\n  //     }\r\n  //   };\r\n  // }, [currentPage, searchImage]);\r\n\r\n  const handleFormSubmit = searchQuery => {\r\n    setArrImages([]);\r\n    setSearchImage(searchQuery);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const loadMoreButton = () => {\r\n    setCurrentPage(state => state + 1);\r\n  };\r\n\r\n  const toogleModal = () => {\r\n    setShowModal(state => !state);\r\n  };\r\n\r\n  const onClickOpenModal = e => {\r\n    if (e.target.nodeName !== 'IMG') {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n\r\n    setLargeImageUrl(e.target.dataset.img);\r\n    setShowModal(true);\r\n    setImageAlt(e.target.alt);\r\n  };\r\n\r\n  return (\r\n    <div className={s.App}>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n\r\n      <ImageGallery images={arrImages} onClick={onClickOpenModal} />\r\n      {isLoading && <LoaderContainer />}\r\n      {arrImages.length > 0 && <Button onClick={loadMoreButton} />}\r\n\r\n      {showModal && (\r\n        <Modal onClose={toogleModal}>\r\n          <img src={largeImageUrl} alt={imageAlt} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport 'modern-normalize';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}